@model IEnumerable<BankApplication.Models.Currency>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="row currency-content">
    @foreach (var item in Model)
    {
        <div class="col-md-6 col-sm-6">
            <div class="currency-box">
                <div class="currency-code-box">
                    @Html.DisplayFor(modelItem => item.Code)

                </div>
                <div class="currency-name-box">
                    @Html.DisplayFor(modelItem => item.Name)

                </div>
                <div class="currency-date-box">
                    @Html.DisplayFor(modelItem => item.EffectiveDate)
                </div>
                <div class="currency-value-box">
                    <div class="currency-ask-box">
                        <span>
                            Sprzedaję
                        </span>
                        <br />
                        <span>
                            @item.Ask
                        </span>
                    </div>
                    <div class="currency-bid-box">
                        <span>
                            Kupuję
                        </span>
                        <br />
                        <span>
                            @item.Bid
                        </span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div class="row">
    <div class="currency-exchange-content">
        <div class="type row">
            <div class="bid active">
                Kupuję
            </div>
            <div class="ask">
                Sprzedaję
            </div>
        </div>
        <div class="currency-content row">
            <div class="currency-left">
                <select class="currency-from col-md-3">
                    <option value="PLN" selected>
                        PLN
                    </option>
                    <option value="EUR">
                        EUR
                    </option>
                    <option value="GBP">
                        GBP
                    </option>
                    <option value="USD">
                        USD
                    </option>
                    <option value="CHF">
                        CHF
                    </option>
                </select>
            </div>
            <div class="currency-right">
                <select class="currency-to col-md-3">
                    <option value="PLN">
                        PLN
                    </option>
                    <option value="EUR" selected>
                        EUR
                    </option>
                    <option value="GBP">
                        GBP
                    </option>
                    <option value="USD">
                        USD
                    </option>
                    <option value="CHF">
                        CHF
                    </option>
                </select>
            </div>
        </div>
        <br />
        <div class="select-content row">
            <div class="row">
                <div class="bank-account-left">
                    <select class="bank-account-from">
                    </select>
                </div>
                <div class="bank-account-right">
                    <select class="bank-account-to">
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="value-content">
                    <div class="value-left">
                        <input class="form-control value" type="number" />
                    </div>
                    <div class="value-right">
                        <input class="form-control result" type="text" disabled />
                    </div>
                </div>
            </div>
        </div>
        <div class="submit-content row">
            <div class="submit">
                <button class="btn btn-primary">Potwierdź</button>
            </div>
        </div>
    </div>
    <span class="clear"></span>
</div>
<script>
    var prevCurrencyFrom;
    var prevCurrencyTo;

    $(".currency-from, .currency-to").select2({
        templateResult: function (code) {
            if (code.id != undefined) {
                var baseUrl = "../../Images";
                var $state = $(
                    '<span><img src="' + baseUrl + '/' + code.id + '.gif" class="img-flag" /> ' + code.text + '</span>'
                );
                return $state;
            }
        },
        templateSelection: function (code) {
            var baseUrl = "../../Images";
            var $state = $(
                '<span><img src="' + baseUrl + '/' + code.id + '.gif" class="img-flag" /> ' + code.text + '</span>'
            );
            return $state;
        }
    });

    $('.bank-account-from, .bank-account-to').select2({
        templateResult: function templateResult(item, container) {
            // replace the placeholder with the break-tag and put it into an jquery object
            return $('<span>' + item.text.replace('[br]', '<br />') + '</span>');
        },
        templateSelection: function templateSelection(item, container) {
            // replace your placeholder with nothing, so your select shows the whole option text
            return item.text.replace('[br]', '');
        }
    });

    function searchBankAccounts(forType) {
        var currency = $(".currency-" + forType).val();

        $.post("Currencies/GetBankAccounts", { code: currency }, function (data) {
            $(".bank-account-" + forType).html(data);
        });
    }

    $(document).ready(function () {
        searchBankAccounts("from");
        searchBankAccounts("to");
    });

    
    $(".currency-from").on("select2:selecting", function (evt) {
        prevCurrencyFrom = $(this).val();
    });

    $(".currency-to").on("select2:selecting", function (evt) {
        prevCurrencyTo= $(this).val();
    });

    $(".currency-from").on("select2:select", function () {
        if ($(this).val() == $(".currency-to").val()) {
            $(".currency-to").val(prevCurrencyFrom).trigger("change");
            searchBankAccounts("to");
        }
        searchBankAccounts("from");
    });

    $(".currency-to").on("select2:select select2:selecting", function (e) {
        if ($(this).val() == $(".currency-from").val()) {
            $(".currency-from").val(prevCurrencyTo).trigger("change");
            searchBankAccounts("from");
        }
        searchBankAccounts("to");
    });


    $(".bid, .ask").click(function () {
        if (!$(this).hasClass("active")) {
            $(".active").removeClass("active");
            $(this).addClass("active");
        }
    });


</script>