@model BankApplication.Models.BankAccount

@{
    ViewBag.Title = "Historia";
}

<h2></h2>
<div class="bank-account-div history active">
    <div class="details-type">
        <div>
            @if (@Model.BankAccountType.Type == "PAY_ACC_FOR_YOUNG")
            {
                @:Konto dla młodych
            }
            else if (@Model.BankAccountType.Type == "PAY_ACC_FOR_ADULT")
            {
                @:Superkonto
            }
            else if (@Model.BankAccountType.Type == "FOR_CUR_ACC")
            {
                @:Konto walutowe
            }
        </div>
        <div class="bankAccountSelect gray-text">@Model.BankAccountNumber</div>
    </div>
    <div class="float-right noselect">
        <div class="float-right text-align-right details-menas">
            <span>Dostępne środki</span>
            <br />
            <span>
                <b>
                    @decimal.Round(Model.AvailableFounds, 2) @Model.Currency.Code
                </b>
            </span>
        </div>
        <div class="float-right">
            <div class="float-right text-align-right details">
                <span class="gray-text">
                    @decimal.Round(Model.Balance, 2)
                    @Model.Currency.Code
                </span>
                <br />
                <span class="gray-text">
                    @decimal.Round(Model.Lock, 2)
                    @Model.Currency.Code
                </span>
            </div>
            <div class="float-right text-align-left details">
                <span class="gray-text">
                    Sadlo
                </span>
                <br />
                <span class="gray-text">
                    Blokady
                </span>
            </div>
        </div>
    </div>
    <div class="float-right buttons noselect">
        @Html.ActionLink("Szczegóły", "Details", "BankAccounts", new { id = Model.BankAccountTypeID }, new { @class = "btn btn-outline-dark" })
        @if (User.IsInRole("User"))
        {
            @Html.ActionLink("Przelew", "Transfer", "Transactions", null, new { @class = "btn btn-primary" })
        }
    </div>
</div>
@if (User.IsInRole("Admin") || User.IsInRole("Worker"))
{
    <div class="form-deposit-withdrawal">
        <div class="value">
            <input type="text" class="form-control valueTextBox value-deposit-withdrawal" />
            @Model.Currency.Code
        </div>

        <div class="submit">
            <button class="form-control btn-primary submit-cash-deposit">
                Wpłać
            </button>
            <button class="form-control btn-default submit-cash-withdrawal">
                Wypłać
            </button>
        </div>
    </div>
}

<div class="search-transactions-group">
    <div class="col-md-6">
        <span class="gray-text">
            Nadawca/Odbiorca
        </span>
        <br />
        <span>
            <input class="sender-receiver" />
        </span>
        <br />
        <br />

        <span class="gray-text">
            Kwota od
        </span>
        <br />
        <span>
            <input class="amount-from valueTextBox" />
        </span>
        <br />
        <br />

        <span class="gray-text">
            Data od
        </span>
        <br />
        <span>
            <input type="date" class="data-from" value="@DateTime.Today.AddMonths(-1).ToString("yyyy-MM-dd")" />
        </span>
        <br />
        <br />
    </div>

    <div class="col-md-6">
        <span class="gray-text">
            Opis
        </span>
        <br />
        <span>
            <input class="description" />
        </span>
        <br />
        <br />

        <span class="gray-text">
            do
        </span>
        <br />
        <span>
            <input class="amount-to valueTextBox" />
        </span>
        <br />
        <br />

        <span class="gray-text">
            Data od
        </span>
        <br />
        <span>
            <input type="date" class="data-to" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
        </span>
        <br />
        <br />
    </div>

    <div class="col-md-6 col-md-offset-3">
        <span class="gray-text" style="text-align: center">
            Typ transakcji
        </span>
        <br />
        <span>
            <select class="type">
                <option value="0">
                    Wszystkie
                </option>
                @foreach (var item in (List<BankApplication.Models.TransactionType>)ViewBag.Types)
                {
                    <option value="@item.ID">
                        @if (item.Type == "TRANSFER")
                        {
                            @:Przelew
                        }
                        else if (item.Type == "CARD_PAYMENT")
                        {
                            @:Płatność kartą
                        }
                        else if (item.Type == "CASH_DEPOSIT")
                        {
                            @:Wpłata
                        }
                        else if (item.Type == "CASH_WITHDRAWAL")
                        {
                            @:Wypłata
                        }
                        else if (item.Type == "CURR_EXCHANGE")
                        {
                            @:Wymiana waluty
                        }
                        else if (item.Type == "CREDIT_TRANSFER")
                        {
                            @:Kredyt/Rata
                        }
                    </option>
                }
            </select>
        </span>
        <br />
        <br />
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Odbiorca / Nadawca / Tytuł
            </th>
            <th>
                Data
            </th>
            <th>
                Kwota
            </th>
        </tr>
    </thead>
    <tbody class="table-transactions-result">
        <tr class="loading-container">
            <td colspan="5">
                <div>
                    <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>
                </div>
            </td>
        </tr>
    </tbody>
</table>

<script>
    var page = 1;
    var active = false;

    function searchTransactions(page, append) {
        active = true;
        var bankAccountNumber = $(".active > .details-type > div.bankAccountSelect").text();
        var senderReceiver = $(".sender-receiver").val();
        var description = $(".description").val();
        var amountFrom = $(".amount-from").val();
        var amountTo = $(".amount-to").val();
        var dataFrom = $(".data-from").val();
        var dataTo = $(".data-to").val();
        var type = $(".type").val();

        $.post("@Url.Action("Transactions", "Transactions")",
            {
                bankAccountNumber: bankAccountNumber,
                page: page,
                senderReceiver: senderReceiver,
                description: description,
                amountFrom: amountFrom,
                amountTo: amountTo,
                dataFrom: dataFrom,
                dataTo: dataTo,
                type: type,
            },
            function (data) {
                if (append == "append") {
                    $(".table-transactions-result").append(data);
                } else {
                    $(".loading-container").hide();

                    if (data != "") {
                        $(".table-transactions-result").html(data);
                    } else if (data === "" && page == 1){
                        $(".table-transactions-result").html(
                            "<tr><td colspan='5'>Brak operacji</td></tr>"
                        );
                    }
                }
                active = false;
            });
    }

    $(document).ready(function () {
        searchTransactions(1);
    });

    $(window).scroll(function () {
        if (($(window).scrollTop() + $(window).height() >= $("body").height() + 70) && !active) {
            page++;
            searchTransactions(page, "append");
        }
    });

    $(".type").select2();

    $(".sender-receiver, .description, .amount-from, .amount-to, .data-from, .data-to")
        .on("keyup change paste", function () {
            searchTransactions(1);
        }
    );

    $(".type").on("select2:select", function () {
        searchTransactions(1);
    });

    $(".submit-cash-deposit").on("click", function () {
        var value = $(".value-deposit-withdrawal").val();
        var bankAccountNumber = $(".bankAccountSelect").text();

        if (parseFloat(value) > 0) {
            $.post("Transactions/CashDeposit", { bankAccountNumber: bankAccountNumber, value: value }, function (data) {
                if (data == "true") {
                    location.reload();
                } else {
                    $(".value-deposit-deposit").addClass("value-error");
                }
            });
        }
    });

    $(".submit-cash-withdrawal").on("click", function () {
        var value = $(".value-deposit-withdrawal").val();
        var bankAccountNumber = $(".bankAccountSelect").text();

        if (parseFloat(value) > 0) {
            $.post("Transactions/CashWithdrawal", { bankAccountNumber: bankAccountNumber, value: value }, function (data) {
                if (data == "true") {
                    location.reload();
                } else {
                    $(".value-deposit-withdrawal").addClass("value-error");
                }
            });
        }
    });
</script>