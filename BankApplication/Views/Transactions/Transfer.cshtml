@model BankApplication.Models.Transaction

@{
    ViewBag.Title = "Przelew";
}

<h2>Przelew</h2>

@using (Html.BeginForm("Transfer", "Transactions",
            new { ReturnUrl = ViewBag.ReturnUrl },
            FormMethod.Post, new { @class = "center-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div class="form-group">
            <label class="control-label col-md-2" for="BankAccountID">Konto</label>
            <div class="col-md-10">
                <select class="form-control js-example-basic-single" name="BankAccountID">
                    @foreach (var item in (List<BankApplication.Models.BankAccount>)ViewBag.BankAccounts)
                    {
                        <option value="@item.ID">
                            @switch (item.BankAccountType.Type)
                            {
                                case "PAY_ACC_FOR_YOUNG":
                                    @:Konto dla młodych
                                    break;
                                default:
                                    @:Konto
                                    break;
                            }
                            (@decimal.Round(item.AvailableFounds, 2) @item.Currency.Code)
                            [br]
                            @item.BankAccountNumber
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.FromBankAccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReceiverName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToBankAccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToBankAccountNumber, new { htmlAttributes = new { @class = "form-control bankAccountNumber" } })
                @Html.ValidationMessageFor(model => model.ToBankAccountNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValueTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValueTo, new { htmlAttributes = new { type = "text", @class = "form-control valueTextBox" } })
                @Html.ValidationMessageFor(model => model.ValueTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrencyToID, "Waluta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CurrencyToID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CurrencyToID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 ">
                @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-default col-md-offset-6 btn-back" })
                <input type="submit" value="Potwierdź" class="btn btn-primary col-md-offset-7 btn-transfer" disabled/>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $('.js-example-basic-single').select2({
            templateResult: function(item, container) {
                return $('<span>' + item.text.replace('[br]', '<br />') + '</span>');
            },
            templateSelection: function(item, container) {
                return item.text.replace('[br]', '');
            }
        });
    });

    $(".valueTextBox, .bankAccountNumber").on("change keyup", function () {
        let value = parseFloat($("input[name=ValueTo]").val());
        let toBankAccountNumber = $("input[name=ToBankAccountNumber]").val();

        if (!isNaN(value) && !toBankAccountNumber.includes("_")) {
            $("input[type=submit]").prop('disabled', false);
        } else {
            $("input[type=submit]").prop('disabled', true);
        }
    });
</script>